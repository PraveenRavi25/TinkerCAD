#include <LiquidCrystal_I2C.h>
#include <Servo.h>

// Initialize LCD
LiquidCrystal_I2C lcd(0x20, 16, 2);

// Initialize Servo
Servo lidServo;

// Ultrasonic Sensor Pins
const int trig1 = 2, echo1 = 3;  // Trash Level Sensor

// PIR Sensor Pin
const int pirPin = 4;

// Potentiometer Pin (Simulated Moisture Sensor)
const int moisturePin = A0;

void setup() {
  lcd.init();
  lcd.backlight();

  pinMode(trig1, OUTPUT);
  pinMode(echo1, INPUT);
  pinMode(pirPin, INPUT);
  
  lidServo.attach(6);
  lidServo.write(0);  // Lid closed initially
  
  lcd.print("Smart Dustbin");
  delay(2000);
  lcd.clear();
}

void loop() {
  // Measure trash level
  int trashDistance = measureDistance(trig1, echo1);
  displayTrashLevel(trashDistance);
  delay(2000); // Stability delay for LCD updates

  // Simulate moisture reading
  int potValue = analogRead(moisturePin);
  float moisture = map(potValue, 0, 1023, 0, 100); // Map to percentage
  displayMoisture(moisture);
  delay(2000); // Stability delay for LCD updates

  // Detect motion with PIR sensor
  int motionDetected = digitalRead(pirPin);
  if (motionDetected == HIGH) {  // Motion detected
    lidServo.write(90);  // Open lid
    delay(3000);         // Keep open for 3 seconds
    lidServo.write(0);   // Close lid
  }

  delay(500); // General delay for loop
}

// Function to measure distance
int measureDistance(int trigPin, int echoPin) {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  long duration = pulseIn(echoPin, HIGH);
  int distance = duration * 0.034 / 2;  // Convert to cm
  return distance;
}

// Function to display trash level
void displayTrashLevel(int distance) {
  lcd.setCursor(0, 0);
  lcd.print("Trash Level:    ");
  lcd.setCursor(0, 1);
  if (distance > 50) {
    lcd.print("Empty         ");
  } else if (distance > 30) {
    lcd.print("Half-Full     ");
  } else {
    lcd.print("Full          ");
  }
}

// Function to display moisture level
void displayMoisture(float moisture) {
  lcd.setCursor(0, 0);
  lcd.print("Moisture:       ");
  lcd.setCursor(0, 1);
  lcd.print(moisture);
  lcd.print("%              ");
}
